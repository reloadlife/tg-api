name: Build and Push Telegram Bot API

on:
  push:
    branches:
      - master
  schedule:
    - cron: "20 4 * * *"
  workflow_dispatch:

concurrency:
  group: build-telegram
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: reloadlife/tg-api

jobs:
  build-telegram:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    name: "ðŸ›– Build Telegram local API"

    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker buildX
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache CMake build directory
        id: cache-cmake
        uses: actions/cache@v3
        with:
          path: /tmp/telegram-bot-api-build
          key: ${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt') }}-

      - name: add telegram-bot-api repository resources to build time
        uses: actions/checkout@v4.1.6
        with:
          repository: tdlib/telegram-bot-api
          path: telegram-bot-api
          submodules: recursive

      - name: Build Docker image [telegram]
        id: build-and-push-telegram
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          network: host
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            ALPINE_VERSION=latest
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref == 'refs/heads/master' && 'latest' || github.ref_name }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
